package mykotlin

//IMP : INTERFACE IS NOT A CLASS ITS SOMTHING LIKE A LISTENER
//INSIDE A INTERFACE WHATEVER DECLARE ITS ABSTRACT & OPEN  IN NATURE
//class india : people() -> THIS MEANS INHERIET class india : people -> THIS MEANS INTERFAACE
//IF ABSTRACT METHOD HAS NO BODY HENCE IT HAS  CONSIDER THE MEMBER BODY METHOD AND WE USE SUPER
//DOESN'GT CONTAIN CONSTR


/* IMP NOTE:
* INTERFACE CAN CONTAIONS BOTH NORMAL METHODS [{METHOD BODY}] & ABSTRACT METHOD [NO BODY]
* BUT THEY CONATIN ONLY ABSTRACT PROPERTY
* INTERFACE IS NOT A CLAS
* CANNOT CREATE INSTANCE OF AN INTERFACE SIMILAR TO AN ABSTRACT CLASS
* */

fun main() {
    val temp = Temp() //INTERFACE CANNOT CREATE AN OBJECT CIZ IT DOSEN;T HAVE ANY CONSTR
    temp.mul()
    temp.onTouch()
}

interface Listener { //INTERFACE CAN CONTAIONS BOTH NORMAL METHODS [{METHOD BODY}] & ABSTRACT METHOD [NO BODY]
    fun onTouch()//// METHOD DONT HAVE METHOD BODY MEANS ABSTARCT METHOD
    fun mul() { //METHOD HAS METHOD BODY MEANS NORMAL METHOD
        println("a")
    }
}

interface Listener1 {
    fun onTouch() { //METHOD HAS METHOD BODY MEANS NORMAL METHOD
        println("b")
    }

    fun mul() { //METHOD HAS METHOD BODY MEANS NORMAL METHOD
        println("c")
    }
}

class Temp : Listener, Listener1 {
    override fun onTouch() { //TWO INTERFACE SAME METHOD NAME BUT ONE IN NORAMAL & OTHER ONE IN ABSTRACT STILL YOU NEED TO OVERRIDE BOTH ALSO WITH ONE INTERFACE
        super.onTouch()
        println("d")
    }

    override fun mul() {
        super<Listener1>.mul()//CODE WILL GET CONFUSE COZ IT HAS TWONORMAL METHOD BODY HENCE TO DEFINE WHICH METHOD SO WE USE SUPER<MYINTERFACE>.ONCLICK()--NORMAL & ABSTRACT METHOD--ABSTRACT PROPERTY ONLY
        println("e")
    }

}

